data <- read.csv("Video_Games_Sales_2017_reduced.csv")
data <- read.csv("Video_Games_Sales_2017_reduced.csv", stringsAsFactors = F)
str(data)
data <- subset(data, data$Platform == "PS2" | data$Platform == "PS3" | data$Platform == "PS4")
apply(dataSub, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
length(unique(data$Name))
data$Name <- NULL
length(unique(data$Genre))
length(unique(data$Publisher))
data$Publisher <- NULL
length(unique(data$Developer))
data$Developer <- NULL
length(unique(data$Year_of_Release))
length(unique(data$Genre))
length(unique(data$Rating))
data$Genre <- NULL
View(data)
data$Rating <- NULL
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
data$User_Score[data$User_Score == ""] <- NA
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
data$Year_of_Release[data$Year_of_Release == "N/A"] <- NA
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
data$Critic_Score <- as.numeric(data$Critic_Score)
shapiro.test(data$Critic_Score)
data$Critic_Score[is.na(data$Critic_Score)] <- median(data$Critic_Score, na.rm = T)
data$Critic_Count <- as.numeric(data$Critic_Count)
shapiro.test(data$Critic_Count)
data$Critic_Count[is.na(data$Critic_Count)] <- median(data$Critic_Count, na.rm = T)
data$User_Count <- as.numeric(data$User_Count)
shapiro.test(data$User_Count)
data$User_Count[is.na(data$User_Count)] <- median(data$User_Count)
data$User_Score <- as.numeric(data$User_Score)
# samo sa numerickim i izlazna je numericka
data <- read.csv("Video_Games_Sales_2017_reduced.csv", stringsAsFactors = F)
str(data)
data <- subset(data, data$Platform == "PS2" | data$Platform == "PS3" | data$Platform == "PS4")
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
length(unique(data$Name))
data$Name <- NULL
length(unique(data$Genre))
length(unique(data$Publisher))
data$Publisher <- NULL
length(unique(data$Developer))
data$Developer <- NULL
length(unique(data$Year_of_Release))
length(unique(data$Rating))
data$Genre <- NULL
data$Rating <- NULL
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
data$User_Score[data$User_Score == ""] <- NA
data$Year_of_Release[data$Year_of_Release == "N/A"] <- NA
data$Critic_Score <- as.numeric(data$Critic_Score)
shapiro.test(data$Critic_Score)
data$Critic_Score[is.na(data$Critic_Score)] <- median(data$Critic_Score, na.rm = T)
data$Critic_Count <- as.numeric(data$Critic_Count)
shapiro.test(data$Critic_Count)
data$Critic_Count[is.na(data$Critic_Count)] <- median(data$Critic_Count, na.rm = T)
data$User_Count <- as.numeric(data$User_Count)
shapiro.test(data$User_Count)
data$User_Count[is.na(data$User_Count)] <- median(data$User_Count)
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
data$User_Score <- as.factor(data$User_Score)
# samo sa numerickim i izlazna je numericka
data <- read.csv("Video_Games_Sales_2017_reduced.csv", stringsAsFactors = F)
str(data)
data <- subset(data, data$Platform == "PS2" | data$Platform == "PS3" | data$Platform == "PS4")
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
length(unique(data$Name))
data$Name <- NULL
length(unique(data$Genre))
length(unique(data$Publisher))
data$Publisher <- NULL
length(unique(data$Developer))
data$Developer <- NULL
length(unique(data$Year_of_Release))
length(unique(data$Rating))
data$Genre <- NULL
data$Rating <- NULL
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
data$User_Score[data$User_Score == ""] <- NA
data$Year_of_Release[data$Year_of_Release == "N/A"] <- NA
data$Critic_Score <- as.numeric(data$Critic_Score)
shapiro.test(data$Critic_Score)
data$Critic_Score[is.na(data$Critic_Score)] <- median(data$Critic_Score, na.rm = T)
data$Critic_Count <- as.numeric(data$Critic_Count)
shapiro.test(data$Critic_Count)
data$Critic_Count[is.na(data$Critic_Count)] <- median(data$Critic_Count, na.rm = T)
data$User_Count <- as.numeric(data$User_Count)
shapiro.test(data$User_Count)
data$User_Count[is.na(data$User_Count)] <- median(data$User_Count)
View(data)
data$User_Score <- as.factor(data$User_Score)
data$User_Score <- as.numeric(data$User_Score)
shapiro.test(data$User_Score)
data$User_Score[is.na(data$User_Score)] <- median(data$User_Score)
data$Platform <- as.numeric(as.factor(data$Platform))
data$Year_of_Release <- as.numeric(as.factor(data$Year_of_Release))
# RADI SAMO SA NUMERICKIM PODACIMA!
# IZLAZNA VARIJABLA JE NUMERICKA!
# da je pisalo da treba da se ucita iz ISLR paketa onda treba
# install.packages('ISLR')
# library(ISLR)
# str(imeDataSeta)
# dataSet <- imeDataSeta
data <- read.csv("Video_Games_Sales_2017_reduced.csv", stringsAsFactors = F)
dataSub <- subset(data, (data$Platform == "PS2"
| data$Platform == "PS3" | data$Platform == "PS4"))
str(dataSub)
apply(dataSub, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
# varijable Critic_Score, Critic_Count i User_Count imaju 1514, 1514 i 1340
# NA vrednosti respektivno
# varijable User_Score, Developer i Rating imaju 1175, 1162 i 1191 praznih
# stringova respektivno
length(unique(dataSub$Name))
length(unique(dataSub$Publisher))
length(unique(dataSub$Developer))
length(unique(dataSub$Rating))
length(unique(dataSub$Platform))
length(unique(dataSub$Genre))
# varijable Name, Publisher i Developer cemo izostaviti iz
# daljeg istrazivanja jer imaju previse razlicitih vrednosti
# pa ih ne mozemo transformisati u faktor varijable
# genre cemo izbaciti jer nema smisla pretvarati ga u numericku varijablu
dataSub$Name <- NULL
dataSub$Publisher <- NULL
dataSub$Developer <- NULL
dataSub$Rating <- NULL
dataSub$Genre <- NULL
str(dataSub)
# ubacili su N/A vrednosti takodje... to sam sam morao da vidim ovde
# ne znam da li kazu na ispitu, trebalo bi da da
apply(dataSub, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(dataSub, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
# sredicemo year_of_release jer ima N/A vrednosti
# sredicemo critic_score, critic_count i user_count jer imaju NA vrednosti
# sredicemo user_score i rating jer imaju prazne stringove
# YEAR OF RELEASE IMA N/A VREDNOSTI
# i trenutno je character varijabla, pa cemo je pretvoriti u factor, pa u numeric
# isto tako cemo uraditi za User_Score koji ima prazne stringove
# Year_of_release necemo transformisati direktno u numericku, vec prvo u faktorsku
# jer imati nivo za svaku godinu, pa tek onda u numericku
sort(table(dataSub$Year_of_Release))
dataSub$Year_of_Release[dataSub$Year_of_Release == "N/A"] <- "2008"
dataSub$Year_of_Release <- as.factor(dataSub$Year_of_Release)
levels(dataSub$Year_of_Release)
dataSub$Year_of_Release <- as.numeric(dataSub$Year_of_Release)
# platform
dataSub$Platform <- as.factor(dataSub$Platform)
levels(dataSub$Platform)
dataSub$Platform <- as.numeric(dataSub$Platform)
sort(table(dataSub$User_Score))
# vidimo da User_score ima prazne stringove, a i 'tbd' - to be determined,
# tako da cemo i to pretvoriti
# u mean ili median
dataSub$User_Score[dataSub$User_Score == "" | dataSub$User_Score == "tbd"] <- NA
dataSub$User_Score <- as.numeric(dataSub$User_Score)
str(dataSub)
apply(dataSub[,c("Critic_Score", "Critic_Count", "User_Score", "User_Count")], 2, FUN = function(x) shapiro.test(x))
# nedostajuce vrednosti numerickih varijabli menjamo srednjom vrednoscu
# ako imaju normalnu raspodelu, a medijanom ako nemaju
# nijedna nema normalnu raspodelu, pa ih menjamo njihovom medijanom
medianUserScore <- median(dataSub$User_Score, na.rm = T)
medianCriticScore <- median(dataSub$Critic_Score, na.rm = T)
medianUserCount <- median(dataSub$User_Count, na.rm = T)
medianCriticCount <- median(dataSub$Critic_Count, na.rm = T)
dataSub$User_Score[is.na(dataSub$User_Score)] <- medianUserScore
dataSub$Critic_Score[is.na(dataSub$Critic_Score)] <- medianCriticScore
dataSub$User_Count[is.na(dataSub$User_Count)] <- medianUserCount
dataSub$Critic_Count[is.na(dataSub$Critic_Count)] <- medianCriticCount
View(dataSub)
# samo sa numerickim i izlazna je numericka
data <- read.csv("Video_Games_Sales_2017_reduced.csv", stringsAsFactors = F)
str(data)
data <- subset(data, data$Platform == "PS2" | data$Platform == "PS3" | data$Platform == "PS4")
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
length(unique(data$Name))
data$Name <- NULL
length(unique(data$Genre))
length(unique(data$Publisher))
data$Publisher <- NULL
length(unique(data$Developer))
data$Developer <- NULL
length(unique(data$Year_of_Release))
length(unique(data$Rating))
data$Genre <- NULL
data$Rating <- NULL
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "N/A", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == "-", na.rm = T))
apply(data, MARGIN = 2, FUN = function(x) sum(x == " ", na.rm = T))
data$User_Score[data$User_Score == ""] <- NA
data$Year_of_Release[data$Year_of_Release == "N/A"] <- NA
data$Critic_Score <- as.numeric(data$Critic_Score)
shapiro.test(data$Critic_Score)
data$Critic_Score[is.na(data$Critic_Score)] <- median(data$Critic_Score, na.rm = T)
data$Critic_Count <- as.numeric(data$Critic_Count)
shapiro.test(data$Critic_Count)
data$Critic_Count[is.na(data$Critic_Count)] <- median(data$Critic_Count, na.rm = T)
data$User_Count <- as.numeric(data$User_Count)
shapiro.test(data$User_Count)
data$User_Count[is.na(data$User_Count)] <- median(data$User_Count)
data$User_Score <- as.factor(data$User_Score)
data$User_Score <- as.numeric(data$User_Score)
shapiro.test(data$User_Score)
data$User_Score[is.na(data$User_Score)] <- median(data$User_Score)
data$Platform <- as.numeric(as.factor(data$Platform))
data$Year_of_Release <- as.numeric(as.factor(data$Year_of_Release))
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
data$User_Score[is.na(data$User_Score)] <- median(data$User_Score)
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
View(data)
data$User_Count[is.na(data$User_Count)] <- median(data$User_Count, na.rm = T)
data$User_Score[is.na(data$User_Score)] <- median(data$User_Score, na.rm = T)
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
shapiro.test(data$Year_of_Release)
data$Year_of_Release[is.na(data$Year_of_Release)] <- median(data$Year_of_Release, na.rm = T)
apply(data, MARGIN = 2, FUN = function(x) sum(is.na(x)))
library(corrplot)
cm <- cor(data)
View(cm)
corrplot.mixed(cm, method = "number", type = "upper", diag = F)
corrplot(cm, method = "number", type = "upper", diag = F)
library(caret)
set.seed(1010)
indexes <- createDataPartition(data$User_Score, p = 0.8, list = FALSE)
train.data <- data[indexes, ]
test.data <- data[-indexes, ]
lm1 <- lm(User_Score ~ Critic_Score, data = train.data)
lm1
library(car)
sqrt(vif(lm1))
summary(lm1)
lm2 <- lm(User_Score ~ ., data = train.data)
summary(lm2)
library(car)
set.seed(1010)
sqrt(vif(lm2))
sort(sqrt(vif(lm2)))
lm3 <- lm(User_Score ~ . -GlobalSales, data = train.data)
lm3 <- lm(User_Score ~ . -Global_Sales, data = train.data)
summary(lm3)
sort(sqrt(vif(lm3)))
lm4 <- lm(User_Score ~ Platform + NA_Sales + EU_Sales + Critic_Score, data = train.data)
summary(lm4)
sort(sqrt(vif(lm4)))
lm4.pred <- predict(lm4, newdata = test.data)
lm4.pred
head(lm4.pred)
data$User_Score_Pred <- lm4.pred
test.data$User_Score_Pred <- lm4.pred
graphics.off()
par(mfrow = c(1,1)) # da imamo samo 1 red i 1 kolonu za grafove
par(mfrow = c(2,2)) # da imamo 2 reda i 2 kolone za grafove
plot(lm4)
par(mfrow = c(1,1)) # da imamo samo 1 red i 1 kolonu za grafove
par(mfrow = c(2,2)) # da imamo 2 reda i 2 kolone za grafove
corrplot(cm, method = "number", type = "upper", diag = F)
par(mfrow = c(1,1)) # da imamo samo 1 red i 1 kolonu za grafove
plot(lm4)
plot(lm4)
plot(lm4)
library(ggplot2)
ggplot(data = test.data) + geom_density(actual = test.data$User_Score_Pred) + geom_density(test.data$User_Score)
ggplot(data = test.data) + geom_density(aes(User_Score_Pred, predicted = "green")) + geom_density(aes(User_Score, actual = "red"))
ggplot(data = test.data) + geom_density(aes(User_Score_Pred, color = "predicted" )) + geom_density(aes(User_Score, color = "actual"))
RSS <- sum((lm4.pred - test.data$User_Score)^2)
TSS <- sum((mean(train.data$User_Score) - test.data$User_Score)^2)
RSQR <- 1 - RSS / TSS
RSQR
# Compute Root Mean Squared Error (RMSE) for a model on the test data
# to see how much error we are making with the predictions:
# RMSE = sqrt(RSS/n)
RMSE <- sqrt(RSS / nrow(test.data))
RMSE
